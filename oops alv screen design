&---------------------------------------------------------------------
*& Report ZOOPS_ALV
&---------------------------------------------------------------------
*&
&---------------------------------------------------------------------
REPORT zoops_alv.

&---------------------------------------------------------------------
*& Report ZOOPS_ALV
&---------------------------------------------------------------------
*&
&---------------------------------------------------------------------
TABLES:vbak,vbap.
TYPES:BEGIN OF lty_vbak,
        vbeln TYPE vbeln_va,
        erdat TYPE erdat,
        erzet TYPE erzet,
        ernam TYPE ernam,
        vbtyp TYPE vbtypl,
      END OF lty_vbak.

DATA:lt_vbak  TYPE TABLE OF lty_vbak,
     lwa_vbak TYPE lty_vbak.

TYPES:BEGIN OF lty_vbap,
        vbeln TYPE vbeln_va,
        posnr TYPE posnr_va,
        matnr TYPE matnr,
      END OF lty_vbap.

DATA:lt_vbap  TYPE TABLE OF lty_vbap,
     lwa_vbap TYPE lty_vbap.

TYPES:BEGIN OF lty_final,
        vbeln TYPE vbeln_va,
        erdat TYPE erdat,
        erzet TYPE erzet,
        ernam TYPE ernam,
        vbtyp TYPE vbtypl,
        posnr TYPE posnr,
        matnr TYPE matnr,
      END OF lty_final.

DATA:lt_final  TYPE TABLE OF lty_final,
     lwa_final TYPE lty_final.

DATA:lv_index TYPE n.
*
DATA:lt_fieldcat TYPE lvc_t_fcat,
     ls_fieldcat TYPE lvc_s_fcat.

*DATA:lt_fieldcat TYPE table of slis_fieldcat_alv,
*     lwa_fieldcat TYPE slis_fieldcat_alv.

DATA:obj_container TYPE REF TO cl_gui_custom_container.

DATA:obj_grid TYPE REF TO cl_gui_alv_grid.

DATA:lt_sort TYPE lvc_t_sort.
DATA:ls_sort TYPE lvc_s_sort.

DATA:lt_filter TYPE lvc_t_filt.
DATA:ls_filter TYPE lvc_s_filt.


SELECT-OPTIONS:s_vbeln FOR vbak-vbeln.

*SELECT a~vbeln a~erdat a~erzet a~ernam a~vbtyp b~posnr b~matnr
*  FROM vbak AS a INNER JOIN vbap AS b
*  ON a~vbeln = b~vbeln
*  INTO TABLE lt_final
*  WHERE a~vbeln IN s_vbeln.

SELECT vbeln erdat erzet ernam vbtyp
  FROM vbak
  INTO TABLE lt_vbak
  WHERE vbeln IN s_vbeln.

IF lt_vbak IS NOT INITIAL.
  SELECT vbeln posnr matnr
    FROM vbap
    INTO TABLE lt_vbap
    FOR ALL ENTRIES IN lt_vbak
    WHERE vbeln = lt_vbak-vbeln.
ENDIF.

SORT lt_vbak BY vbeln.
SORT lt_vbap BY vbeln.
LOOP AT lt_vbak INTO lwa_vbak.
  READ TABLE lt_vbap INTO lwa_vbap WITH KEY vbeln = lwa_vbak-vbeln.
  IF sy-subrc = 0.
    lv_index = sy-tabix.
  ENDIF.
  LOOP AT lt_vbap INTO lwa_vbap FROM lv_index.
    IF lwa_vbak-vbeln <> lwa_vbap-vbeln.
      EXIT.
    ELSE.
      lwa_final-vbeln = lwa_vbak-vbeln.
      lwa_final-erdat = lwa_vbak-erdat.
      lwa_final-erzet = lwa_vbak-erzet.
      lwa_final-ernam = lwa_vbak-ernam.
      lwa_final-posnr = lwa_vbap-posnr.
      lwa_final-matnr = lwa_vbap-matnr.
      APPEND lwa_final TO lt_final.
      CLEAR:lwa_vbak,lwa_vbap,lwa_final.
    ENDIF.
  ENDLOOP.
ENDLOOP.



*LOOP AT lt_final INTO lwa_final.
*  WRITE: / lwa_final-vbeln,
*           lwa_final-erdat,
*           lwa_final-erzet,
*           lwa_final-ernam,
*           lwa_final-posnr,
*           lwa_final-matnr.
*
*ENDLOOP.

CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
  EXPORTING
*   I_BUFFER_ACTIVE        =
    i_structure_name       = 'ZSTR_OOPS'
*   I_CLIENT_NEVER_DISPLAY = 'X'
*   I_BYPASSING_BUFFER     =
*   I_INTERNAL_TABNAME     =
  CHANGING
    ct_fieldcat            = lt_fieldcat
  EXCEPTIONS
    inconsistent_interface = 1
    program_error          = 2
    OTHERS                 = 3.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.


LOOP AT lt_fieldcat INTO ls_fieldcat.
  IF ls_fieldcat-fieldname = 'VBELN'.
    ls_fieldcat-reptext = 'Document Number'.
    MODIFY lt_fieldcat FROM ls_fieldcat TRANSPORTING reptext.
  ENDIF.
  IF ls_fieldcat-fieldname = 'ERDAT'.
    ls_fieldcat-col_pos = '3'.
    MODIFY lt_fieldcat FROM ls_fieldcat TRANSPORTING col_pos.
  ENDIF.
  IF ls_fieldcat-fieldname = 'ERZET'.
    ls_fieldcat-col_pos = '2'.
    MODIFY lt_fieldcat FROM ls_fieldcat TRANSPORTING col_pos.
  ENDIF.

ENDLOOP.


*Manual Field Catalog Build.
*lt_fieldcat = VALUE #( ( col_pos = '1'  fieldname = 'VBELN' hotspot   = abap_true scrtext_l = 'Sales Number' key = 'X' )
*                          ( col_pos = '2'  fieldname = 'ERDAT' scrtext_l = 'Sales Date' )
*                          ( col_pos = '3'  fieldname = 'ERZET' scrtext_l = 'Time' )
*                          ( col_pos = '4'  fieldname = 'ERNAM' scrtext_l = 'Name' key       = 'X' )
*                          ( col_pos = '5'  fieldname = 'VBTYP' scrtext_l = 'Material Type'   key       = 'X' )
*                          ( col_pos = '6'  fieldname = 'POSNR' scrtext_l = 'Sales Item No'   key       = 'X' )
*                          ( col_pos = '7'  fieldname = 'MATNR' hotspot   = abap_true scrtext_l = 'Material No'  key = 'X' )
*                         ) .

*ls_fieldcat-col_pos = '1'.
*ls_fieldcat-fieldname = 'VBELN'.
*ls_fieldcat-scrtext_l = 'Sales Number'.
*APPEND ls_fieldcat TO lt_fieldcat.
*CLEAR:ls_fieldcat.
*
*ls_fieldcat-col_pos = '2'.
*ls_fieldcat-fieldname = 'ERDAT'.
*ls_fieldcat-scrtext_l = 'Sales Date'.
*APPEND ls_fieldcat TO lt_fieldcat.
*CLEAR:ls_fieldcat.
*
*
*ls_fieldcat-col_pos = '3'.
*ls_fieldcat-fieldname = 'ERZET'.
*ls_fieldcat-scrtext_l = 'Time'.
*APPEND ls_fieldcat TO lt_fieldcat.
*CLEAR:ls_fieldcat.
*
*
*ls_fieldcat-col_pos = '4'.
*ls_fieldcat-fieldname = 'ERNAM'.
*ls_fieldcat-scrtext_l = 'Name'.
*APPEND ls_fieldcat TO lt_fieldcat.
*CLEAR:ls_fieldcat.
*
*
*ls_fieldcat-col_pos = '5'.
*ls_fieldcat-fieldname = 'VBTYP'.
*ls_fieldcat-scrtext_l = 'Material Type'.
*APPEND ls_fieldcat TO lt_fieldcat.
*CLEAR:ls_fieldcat.
*
*
*ls_fieldcat-col_pos = '6'.
*ls_fieldcat-fieldname = 'POSNR'.
*ls_fieldcat-scrtext_l = 'Item'.
*APPEND ls_fieldcat TO lt_fieldcat.
*CLEAR:ls_fieldcat.



*ls_fieldcat-col_pos = '7'.
*ls_fieldcat-fieldname = 'MATNR'.
*ls_fieldcat-scrtext_l = 'Material Number'.
*APPEND ls_fieldcat TO lt_fieldcat.
*CLEAR:ls_fieldcat.




CREATE OBJECT obj_container
  EXPORTING
    container_name = 'CON_NAM'. "Container Name

CREATE OBJECT obj_grid
  EXPORTING
    i_parent = obj_container. "Parent Object
.

ls_sort-fieldname = 'ERDAT'.
*ls_sort-up = 'X'.
ls_sort-down = 'X'.
APPEND ls_sort TO lt_sort.
CLEAR:ls_sort.

ls_filter-fieldname = 'MATNR'.
ls_filter-sign = 'I'.
ls_filter-option = 'EQ'.
ls_filter-low = '000000000000000062'.
APPEND ls_filter TO lt_filter.
CLEAR ls_filter.



CALL METHOD obj_grid->set_table_for_first_display
  EXPORTING
*   i_buffer_active               =
*   i_bypassing_buffer            =
*   i_consistency_check           =
    i_structure_name              = 'ZSTR_OOPS'
*   is_variant                    =
*   i_save                        =
*   i_default                     = 'X'
*   is_layout                     =
*   is_print                      =
*   it_special_groups             =
*   it_toolbar_excluding          =
*   it_hyperlink                  =
*   it_alv_graphics               =
*   it_except_qinfo               =
*   ir_salv_adapter               =
  CHANGING
    it_outtab                     = lt_final
    it_fieldcatalog               = lt_fieldcat
    it_sort                       = lt_sort
    it_filter                     = lt_filter
  EXCEPTIONS
    invalid_parameter_combination = 1
    program_error                 = 2
    too_many_lines                = 3
    OTHERS                        = 4.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.

CALL SCREEN '0100'.

*INCLUDE zoops_alv_user_command_0100i03.

INCLUDE zoops_alv_status_0100o01.

INCLUDE zoops_alv_user_command_0100i01.
